Prompt for Replit AI Agent:

I am building a modern, gamified fintech web app called "Fincread" using React and Tailwind CSS. This app helps users build financial credibility (called a “FinCred Score”) through interactive money-management challenges, especially those without traditional credit history (students, freelancers, gig workers).

I want you to generate clean, modular, well-commented React + Tailwind code in VS Code-style project structure, starting with the frontend.

🧩 App Overview:
Tech Stack: React, Tailwind CSS, React Router, Firebase Auth, optional Node.js + Express + MongoDB for backend.

Theme: Fun, modern, slightly gamified UI with light/dark mode and fintech-style colors (soft purple, mint green, yellow for warning, red for missed tasks).

🗂️ Pages to Build:
Landing Page

Tagline: “No Credit Score? No Problem.”

Hero section with finance-themed illustration (e.g. coins, XP bar)

CTA: “Start Building Your FinCred Score”

Features section with icons: “Gamified XP System”, “Daily Challenges”, “Track Financial Growth”

Footer: Social links, Contact, FAQ

Signup/Login Page

Split-screen layout: form on one side, animation/graphic of user leveling up

Email/password auth using Firebase

Form animations (focus, validation)

Dashboard

XP progress bar (animated)

Daily/weekly task tracker

FinCred Score visual meter

“Today’s Challenge” card (with confetti animation on completion)

Leaderboard tab with top users and badges

Light/Dark mode toggle

Profile Page

Editable user info

Shareable FinCred card

List of earned badges (with hover animations)

Graph showing FinCred score progression

(Optional) Admin Panel

Dashboard layout

Manage users, XP, badges, feedback

Analytics for user engagement

⚙️ Functional Requirements:
Use React Router for page navigation

Use Tailwind CSS for all styling (with smooth transitions, responsive layout)

Use Firebase Authentication (email/password)

Components must be responsive (mobile + desktop)

Use reusable components where possible (e.g. Button, Card, ProgressBar, Navbar, Footer)

🔧 Development Phases:
Start by:

Setting up React project

Adding Tailwind CSS

Implementing page routing

Building UI for Landing Page, Login, and Dashboard first

✨ Make sure the UI feels engaging, gamified, modern, and accessible. Include hover states, transition animations, and clean component layout. Use dummy data where backend is not connected yet.

